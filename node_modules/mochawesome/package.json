{
  "name": "mochawesome",
  "version": "1.3.5",
  "description": "A Gorgeous HTML/CSS Reporter for Mocha.js",
  "scripts": {
    "test": "gulp build"
  },
  "author": {
    "name": "Adam Gruber"
  },
  "license": "ISC",
  "repository": {
    "type": "git",
    "url": "https://github.com/adamgruber/mochawesome"
  },
  "keywords": [
    "mocha",
    "reporter",
    "json",
    "handlebars"
  ],
  "engine": "node >= 0.10.0",
  "main": "mochawesome.js",
  "dependencies": {
    "async": "^0.9.0",
    "chalk": "^1.0.0",
    "handlebars": "^3.0.3",
    "highlight.js": "^8.5.0",
    "json-stringify-safe": "^5.0.0",
    "lodash": "^3.1.0",
    "mkdirp": "^0.5.1",
    "mocha": "*",
    "moment": "^2.9.0",
    "ncp": "^1.0.1",
    "node-uuid": "^1.4.1",
    "opener": "^1.4.1"
  },
  "devDependencies": {
    "bootstrap": "^3.3.2",
    "chart.js": "^1.0.1",
    "fiveby": "^1.0.0",
    "gulp": "^3.8.1",
    "gulp-concat": "^2.4.3",
    "gulp-declare": "^0.3.0",
    "gulp-handlebars": "^4.0.0",
    "gulp-jshint": "^1.9.0",
    "gulp-less": "^3.0.3",
    "gulp-mocha": "^2.2.0",
    "gulp-plumber": "^0.6.6",
    "gulp-spawn-mocha": "^0.5.2",
    "gulp-uglify": "^1.1.0",
    "gulp-util": "^3.0.2",
    "gulp-watch": "^4.1.0",
    "gulp-wrap": "^0.10.1",
    "jquery": "^2.1.3",
    "jshint-stylish": "^1.0.0",
    "merge-stream": "^0.1.7",
    "should": "^3.3.2"
  },
  "readme": "mochawesome\n===========\n[![npm](https://img.shields.io/npm/v/mochawesome.svg?style=flat-square)](http://www.npmjs.com/package/mochawesome) [![Build Status](https://img.shields.io/travis/adamgruber/mochawesome/master.svg?style=flat-square)](https://travis-ci.org/adamgruber/mochawesome) [![Code Climate](https://img.shields.io/codeclimate/github/adamgruber/mochawesome.svg?style=flat-square)](https://codeclimate.com/github/adamgruber/mochawesome)\n\nMochawesome is a custom reporter for use with the Javascript testing framework, [mocha][1]. It generates a full fledged HTML/CSS report that helps visualize your test suites.\n\n##New in 1.3.0\n- Changes to support [mocha][1] v2.4.0 and later\n\n##Features\n- At-a-glance stats including pass percentage\n- Beautiful charts\n- Support for nested `describe`s\n- Supports pending tests\n- Filter view by test type\n- Review test code inline\n- Stack trace for failed tests\n- Responsive and mobile-friendly\n- Saves JSON output for further processing\n- Custom report [options](#options)\n- Offline viewing\n\n##Browser Support\nTested to work in Chrome. *Should* work in any modern web browser including IE9+.\nMochawesome generates a self-contained report that can be viewed offline. \n\n##Sample Report\n\n<img src=\"./docs/mochawesome-screen.png\" alt=\"Mochawesome Report\" width=\"75%\" />\n\n\n##Usage\n\n1. Add Mochawesome to your project:\n\n  `npm install --save-dev mochawesome`\n\n2. Tell mocha to use the Mochawesome reporter:\n\n  `mocha testfile.js --reporter mochawesome`\n\n3. If using mocha programatically:\n\n  ```js\n  var mocha = new Mocha({\n      reporter: 'mochawesome'\n  });\n  ```\n\n##Output\nMochawesome generates the following inside your project directory:\n```\nmochawesome-reports/\n├── css\n│   └── mochawesome.css\n├── fonts\n│   ├── Roboto+Condensed_300_normal.ttf\n│   ├── Roboto+Condensed_300_normal.woff\n│   ├── Roboto+Condensed_400_normal.svg\n│   ├── Roboto+Condensed_400_normal.ttf\n│   ├── Roboto+Condensed_400_normal.woff\n│   ├── Roboto+Condensed_700_normal.ttf\n│   ├── Roboto+Condensed_700_normal.woff\n│   ├── Roboto+Slab_400_normal.svg\n│   ├── Roboto+Slab_400_normal.ttf\n│   ├── Roboto+Slab_400_normal.woff\n│   ├── mochawesome.eot\n│   ├── mochawesome.svg\n│   ├── mochawesome.ttf\n│   └── mochawesome.woff\n├── js\n│   ├── mochawesome.js\n│   └── vendor.js\n├── mochawesome.html\n└── mochawesome.json\n```\n\nThe two main files to be aware of are:\n\n**mochawesome.html** - The rendered report file\n\n**mochawesome.json** - The raw json output used to render the report\n\n\n##Options\nMochawesome supports options via environment variables or passed in to mocha via `--reporter-options`.\n\n- `reportDir: {String}` - changes the name of the report directory\n- `reportName: {String}` - changes the name of the report file\n- `reportTitle: {Sring}` - changes the title of the report\n- `inlineAssets: {Boolean}` - when `true` inlines all report assets into a self-contained report file\n\n*Setting a custom filename will change both the report html and json files.*\n\n**Options passed in will take precedence over environment variables.**\n\n\n####Environment variables\n```bash\n$ export MOCHAWESOME_REPORTDIR=customReportDir\n$ export MOCHAWESOME_REPORTNAME=customReportName\n$ export MOCHAWESOME_REPORTTITLE=customReportTitle\n$ export MOCHAWESOME_INLINEASSETS=true\n```\n\n####Mocha options\n```bash\n$ mocha test.js --reporter mochawesome --reporter-options reportDir=customReportDir,reportName=customReportName,reportTitle=customReportTitle,inlineAssets=true\n```\n\n```js\nvar mocha = new Mocha({\n    reporter: 'mochawesome',\n    reporterOptions: {\n      reportDir: 'customReportDir',\n      reportName: 'customReportName',\n      reportTitle: 'customReportTitle',\n      inlineAssets: true\n    }\n});\n  ```\n\n\n##Development\nIf you wish to make changes to the reporter you will need to clone the repo and build locally. Building requires you to have [gulp](https://github.com/gulpjs/gulp) installed.\n\n###Installation\n```sh\n$ git clone https://github.dowjones.net/grubera/mochawesome\n```\n###Modifying\nReporter files are found in `/lib` directory.\nTemplates, styles, and client-side scripts are in the `/src` directory.\n\n###Building\nThere are several gulp tasks available but the main ones to be aware of are:\n\n####`gulp build` - Full Build\nRuns jshint, parses LESS, compiles templates, concatenates and minifies scripts.\n*Note: This task will fail if linting fails.*\n\n####`gulp watch` - Watch Files\nWatches for changes to JS, LESS, and MU and builds when a change is detected. If a change is detected in a JS file this will run jshint first before building and will fail on any lint errors.\n\n####`gulp lint` - Lint JS\nThis will run jshint only, no building will occur.\n\n####`gulp test` - Run Test\nAfter building you can run this to test the reporter and see the output.\n*Note: The default gulp task will run this task.*\n\n####`gulp testOpts` - Run Test with Options\nAfter building you can run this to test the reporter and see the output.\n\n[1]: http://visionmedia.github.io/mocha/",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/adamgruber/mochawesome/issues"
  },
  "_id": "mochawesome@1.3.5",
  "dist": {
    "shasum": "381ae7b10ea44ba2ec827df2c78e6f03476f8840"
  },
  "_from": "mochawesome@",
  "_resolved": "https://registry.npmjs.org/mochawesome/-/mochawesome-1.3.5.tgz"
}
